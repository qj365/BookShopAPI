@model BookShopAPI.Areas.Admin.ViewModel.BookViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}



<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@Model.Title</h1>
            </div>

        </div>
    </div><!-- /.container-fluid -->
</section>



<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="row">
                            <form id="formBook" enctype="multipart/form-data" style="display: flex; width: 100%;">
                                @Html.HiddenFor(model => model.Id)
                                <div class="col-md-8">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "summernote" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-horizontal">

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IdCategory, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(m => m.IdCategory, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IdPublisher, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(m => m.IdPublisher, new SelectList(Model.Publishers, "Id", "Name"), "", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.IdPublisher, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IdAuthor, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(m => m.IdAuthor, new SelectList(Model.Authors, "Id", "Name"), "", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.IdAuthor, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-4" })

                                            <div class="col-md-12 custom-file" style="width:96%; margin-left:6px">
                                                @Html.EditorFor(model => model.Photo, new
                                                {
                                                    htmlAttributes = new
                                                    {
                                                        @class = "custom-file-input",
                                                        id = "exampleInputFile",
                                                        @type = "file",
                                                        accept = "image/*"
                                                    }
                                                })

                                                <label class="custom-file-label" for="exampleInputFile">Choose file</label>

                                                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @if (Model.Id == 0)
                                            {
                                                <img class="col-md-5" id="blah" src="~/Areas/Admin/Data/BookImage/150x200.png" alt="placeholder" style="width:150px; height:200px" />
                                            }
                                            else
                                            {
                                                <img class="col-md-5" id="blah" src="~/Areas/Admin/Data/BookImage/@Model.Photo" alt="placeholder" style="width:150px; height:200px" />

                                            }
                                        </div>


                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Save" class="btn btn-primary" />
                                                <a href="~/Admin/Book" class="btn btn-warning">Huỷ</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>


    $(document).ready(function () {

        $('select').select2();

        $('#summernote').summernote();


        bsCustomFileInput.init();

        exampleInputFile.onchange = evt => {
            const [file] = exampleInputFile.files
            if (file) {
                blah.src = URL.createObjectURL(file)
            }
        }


        $('#formBook').submit(function (e) {
            e.preventDefault()
            @*formData.delete('files')
            formData.delete('Photo')*@
            const photoFile = ($('#exampleInputFile').get(0).files)[0]


            const id = $('#Id').val()
            const name = $('#Name').val()
            const discount = $('#Discount').val()
            const price = $('#Price').val()
            const amount = $('#Amount').val()
            const description = $('#summernote').summernote('code')
            const idPublisher = $('#IdPublisher').val()
            const idCategory = $('#IdCategory').val()
            const idAuthor = $('#IdAuthor').val()


            const redirect = function () {
                window.location.href = '/Admin/Book'
            }
            const book = {
                name: name,
                discount: discount,
                price: price,
                amount: amount,
                description: description,
                idPublisher: idPublisher,
                idCategory: idCategory,
                idAuthor: idAuthor,
            }

            console.log(book)

            $.ajax({
                url: `/api/book`,
                method: 'post',
                data: book
            })
                .done(function (r) {
                    var formData = new FormData();
                    const photoFile = ($('#exampleInputFile').get(0).files)[0]
                    var today = new Date();
                    var dd = String(today.getDate()).padStart(2, '0');
                    var mm = String(today.getMonth() + 1).padStart(2, '0'); 
                    var yyyy = today.getFullYear();
                    today = mm + dd + yyyy;

                    formData.append('PhotoFile', photoFile)
                    formData.append('today', today)
                    formData.append('id', r.id)
                    formData.append('type', 0)



                    $.ajax({
                        url: `/book/savef`,
                        method: 'post',
                        contentType: false,
                        processData: false,
                        data: formData
                    })
                        .done(function () {

                            toastr.success('Thêm sách thành công.')
                            setTimeout(redirect, 300)


                        })
                        .fail(function () {

                            toastr.error('Có lỗi upload đã xảy ra.')

                        })

                })
                .fail(function () {
                    toastr.error('Có lỗi đã xảy ra.')

                })
        })
    })
</script>

